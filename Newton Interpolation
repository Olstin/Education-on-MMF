
#include <iostream>
#include <fstream>
#include <iomanip>
using namespace std;

void Reading_from_file(int& n, double& x, double* &X, double* &Y) {
    ifstream fin;
    fin.open("Newton.txt");

    fin >> n;
    fin >> x;

    X = new double[n];
    for (int i = 0; i < n; i++)
    {
        fin >> X[i];
    }

    Y = new double[n];
    for (int i = 0; i < n; i++)
    {
        fin >> Y[i];
    }
}

double Newton_method(int n, double& x, double* &X, double* &Y) {
    double N = 0;
    double Divided_difference = 0; 
    double M = 1;

    for (int i = 0; i < n; i++) {
        Divided_difference = 0;
        for (int j = 0; j <= i; j++) {
            M = 1;
            for (int k = 0; k <= i; k++) {
                if (k != j) {
                    M *= (X[j] - X[k]);
                }
            }
            Divided_difference += Y[j] / M;
        }
        for (int k = 0; k < i; k++) {
            Divided_difference *= x - X[k];
        }
        N += Divided_difference;
    }
    return N;
}

int main() {
    int n = 0;
    double x;
    double* Y = new double[1];
    double* X = new double[1];

    Reading_from_file(n, x, X, Y);

    cout << "\n" << "Answer: " << setprecision(8) << Newton_method(n, x, X, Y) << "\n" << "R(x) = f(x) - L(x) = " << log10(x) - Newton_method(n, x, X, Y);
}
